{"ast":null,"code":"var _jsxFileName = \"/Users/romanovych/Desktop/html/homeTasks/myIgnatHomeTask/src/p2-homeworks/h4/HW4.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText';\nimport s from './HW4.module.css';\nimport SuperButton from './common/c2-SuperButton/SuperButton';\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox';\nimport style from '../h4/common/c2-SuperButton/SuperButton.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HW4() {\n  _s();\n\n  const [text, setText] = useState('');\n  const error = text ? '' : 'error';\n\n  const showAlert = () => {\n    if (error) {\n      alert('введите текст...');\n    } else {\n      alert(text); // если нет ошибки показать текст\n    }\n  };\n\n  const [checked, setChecked] = useState(true);\n\n  const testOnChange = e => setChecked(!e.currentTarget.checked);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), \"homeworks 4\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.column,\n      children: [/*#__PURE__*/_jsxDEV(SuperInputText, {\n        value: text,\n        onChangeText: setText,\n        onEnter: showAlert,\n        error: error // spanClassName={s.testSpanError}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperInputText, {\n        className: s.blue // проверьте, рабоет ли смешивание классов\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        children: \"default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        className: style.default,\n        red: true // пропсу с булевым значением не обязательно указывать true\n        ,\n        onClick: showAlert,\n        children: \"delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        disabled: true,\n        children: \"disabled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperCheckbox, {\n        checked: checked,\n        onChangeChecked: setChecked,\n        children: \"test checkbox \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperCheckbox, {\n        onChange: testOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HW4, \"u7qzIPWlJ8JQ9S0LSuMah36Lnt4=\");\n\n_c = HW4;\nexport default HW4;\n\nvar _c;\n\n$RefreshReg$(_c, \"HW4\");","map":{"version":3,"sources":["/Users/romanovych/Desktop/html/homeTasks/myIgnatHomeTask/src/p2-homeworks/h4/HW4.tsx"],"names":["React","useState","SuperInputText","s","SuperButton","SuperCheckbox","style","HW4","text","setText","error","showAlert","alert","checked","setChecked","testOnChange","e","currentTarget","column","blue","default"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,CAAP,MAAc,kBAAd;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,KAAP,MAAkB,oDAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAMS,KAAK,GAAGF,IAAI,GAAG,EAAH,GAAQ,OAA1B;;AAEA,QAAMG,SAAS,GAAG,MAAM;AACpB,QAAID,KAAJ,EAAW;AACPE,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,KAFD,MAEO;AACHA,MAAAA,KAAK,CAACJ,IAAD,CAAL,CADG,CACS;AACf;AACJ,GAND;;AAQA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAU,IAAV,CAAtC;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAsCF,UAAU,CAAC,CAACE,CAAC,CAACC,aAAF,CAAgBJ,OAAlB,CAArE;;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,8BAII;AAAK,MAAA,SAAS,EAAEV,CAAC,CAACe,MAAlB;AAAA,8BACI,QAAC,cAAD;AACI,QAAA,KAAK,EAAEV,IADX;AAEI,QAAA,YAAY,EAAEC,OAFlB;AAGI,QAAA,OAAO,EAAEE,SAHb;AAII,QAAA,KAAK,EAAED,KAJX,CAKI;;AALJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,cAAD;AACI,QAAA,SAAS,EAAEP,CAAC,CAACgB,IADjB,CACuB;;AADvB;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAmBI,QAAC,WAAD;AACI,QAAA,SAAS,EAAEb,KAAK,CAACc,OADrB;AAEI,QAAA,GAAG,MAFP,CAEQ;AAFR;AAGI,QAAA,OAAO,EAAET,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eA2BI,QAAC,WAAD;AAAa,QAAA,QAAQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAiCI,QAAC,aAAD;AACI,QAAA,OAAO,EAAEE,OADb;AAEI,QAAA,eAAe,EAAEC,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ,eAwCI,QAAC,aAAD;AAEe,QAAA,QAAQ,EAAEC;AAFzB;AAAA;AAAA;AAAA;AAAA,cAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAkDI;AAAA;AAAA;AAAA;AAAA,YAlDJ,eAuDI;AAAA;AAAA;AAAA;AAAA,YAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2DH;;GA1EQR,G;;KAAAA,G;AA4ET,eAAeA,GAAf","sourcesContent":["import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\nimport style from '../h4/common/c2-SuperButton/SuperButton.module.css'\n\n\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(true)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(!e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    className={style.default}\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}>\n                    test checkbox {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox\n\n                               onChange={testOnChange}/>\n\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n"]},"metadata":{},"sourceType":"module"}